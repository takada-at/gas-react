// This Script Generated By AutoGen Script
// Please, Don't Modify
//
import { all, put, call, take } from 'redux-saga/effects'
import { callRpc } from '../Rpc/Actions'
import { addMessage } from '../Notify/Actions'
<% for (let api of apis) { %>
export const <%= api.action %> = '<%= api.action %>'
export const <%= api.action %>_SUCCESS = '<%= api.action %>_SUCCESS'
export const <%= api.action %>_FAILURE = '<%= api.action %>_FAILURE'<% } %>
<% for (let api of apis) { %>
export function <%= camel(api.action) %> (<%= api.actionParameters.join(', ') %>) {
  return {
    type: <%= api.action %><% if(api.actionParameters.length > 0) { %>,
    <%= api.actionParameters.join(',\n    ') %><% } %>
  }
}

export function <%= camel(api.action) %>Success (result) {
  return {
    type: <%= api.action %>_SUCCESS,
    result
  }
}

export function <%= camel(api.action) %>Failure (failure) {
  return {
    type: <%= api.action %>_FAILURE,
    failure
  }
}

export function * <%= camel('HANDLE_' + api.action) %> () {
  while (true) {
    const action = yield take(<%= api.action %>)
    const { result, error } = yield call(callRpc, '<%= api.name %>', <% if(api.parameters.length > 0) { %><%= api.parameters.map((p) => 'action.' + p).join(', ') %><% } else { %>[]<% } %>)
    if (error) {
      yield put(<%= camel(api.action) %>Failure(error))
    } else {
      yield put(<%= camel(api.action) %>Success(result))
      if (action.message) {
        yield put(addMessage(action.message))
      }
    }
  }
}
<% } %>
export function * rootSaga () {
  yield all([
    <%= apis.map((api) => camel('HANDLE_' + api.action) + '()').join(',\n    ') %>
  ])
}
