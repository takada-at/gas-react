// This Script Generated By AutoGen Script
// Please, Don't Modify
//
import { all, put, call, take } from 'redux-saga/effects'
import { callRpc } from '../Rpc/Actions'
import { addMessage } from '../Notify/Actions'

export const GET_SHEET_VALUES = 'GET_SHEET_VALUES'
export const GET_SHEET_VALUES_SUCCESS = 'GET_SHEET_VALUES_SUCCESS'
export const GET_SHEET_VALUES_FAILURE = 'GET_SHEET_VALUES_FAILURE'
export const LOAD_MAIL = 'LOAD_MAIL'
export const LOAD_MAIL_SUCCESS = 'LOAD_MAIL_SUCCESS'
export const LOAD_MAIL_FAILURE = 'LOAD_MAIL_FAILURE'

export function getSheetValues (col) {
  return {
    type: GET_SHEET_VALUES,
    col
  }
}

export function getSheetValuesSuccess (result) {
  return {
    type: GET_SHEET_VALUES_SUCCESS,
    result
  }
}

export function getSheetValuesFailure (failure) {
  return {
    type: GET_SHEET_VALUES_FAILURE,
    failure
  }
}

export function * handleGetSheetValues () {
  while (true) {
    const action = yield take(GET_SHEET_VALUES)
    const { result, error } = yield call(callRpc, 'getSheetValues', action.col)
    if (error) {
      yield put(getSheetValuesFailure(error))
    } else {
      yield put(getSheetValuesSuccess(result))
      if (action.message) {
        yield put(addMessage(action.message))
      }
    }
  }
}

export function loadMail () {
  return {
    type: LOAD_MAIL
  }
}

export function loadMailSuccess (result) {
  return {
    type: LOAD_MAIL_SUCCESS,
    result
  }
}

export function loadMailFailure (failure) {
  return {
    type: LOAD_MAIL_FAILURE,
    failure
  }
}

export function * handleLoadMail () {
  while (true) {
    const action = yield take(LOAD_MAIL)
    const { result, error } = yield call(callRpc, 'getUserEmail', [])
    if (error) {
      yield put(loadMailFailure(error))
    } else {
      yield put(loadMailSuccess(result))
      if (action.message) {
        yield put(addMessage(action.message))
      }
    }
  }
}

export function * rootSaga () {
  yield all([
    handleGetSheetValues(),
    handleLoadMail()
  ])
}
